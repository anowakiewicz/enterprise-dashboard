{"version":3,"sources":["containers/Dashboard/Wrapper.js","containers/Dashboard/Row.js","containers/Dashboard/Column.js","common-components/H2/index.js","common-components/H3/index.js","consts/Colors.js","common-components/Select/index.js","common-components/SelectOption/OptionItem.js","common-components/SelectOption/index.js","common-components/Form/index.js","common-components/Input/index.js","common-components/ButtonSubmit/index.js","components/InfoBox/SearchInput.js","components/InfoBox/Header.js","components/InfoBox/InnerWrapper.js","components/InfoBox/GreyBar.js","components/InfoBox/InfoBoxContainer.js","components/InfoBox/Icon.js","components/InfoBox/index.js","containers/ComponentWrapper/index.js","components/ChartBox/Row.js","components/ChartBox/Chart.js","components/ChartBox/index.js","components/WorldMap/Map.js","components/WorldMap/index.js","components/Summary/List.js","components/Summary/ListItem.js","components/Summary/Link.js","components/Summary/RecentRepos.js","components/Summary/index.js","containers/Dashboard/index.js","containers/AppWrapper/index.js","common-components/H1/index.js","App.js","stores/userDataStore.js","index.js","stores/rootStore.js"],"names":["Wrapper","styled","div","Row","Column","H2","h2","props","large","noMargin","H3","h3","Colors","grey_light","grey_dark","blue","green","orange","red","Select","select","OptionItem","option","active","selected","SelectOption","items","map","idx","key","data-role","login","Form","form","Input","input","error","ButtonSubmit","button","SearchInput","inject","initialValues","name","onSubmit","values","setSubmitting","userDataStore","changeUserToSearchFor","validationSchema","Yup","shape","required","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","id","placeholder","type","value","onChange","onBlur","disabled","Search","Component","Header","result","val","public_repos","followers","length","header","InnerWrapper","GreyBar","InfoBoxContainer","IconWrap","BlueIconWrap","GreenIconWrap","OrangeIconWrap","RedIconWrap","Icon","Person","style","color","DynamicFeed","BarChart","MoreHoriz","renderIcon","InfoBox","action","bound","observer","e","this","target","data","className","title","selectUser","htmlFor","fontSize","marginLeft","handleOnSelectChange","computed","ComponentWrapper","height","marginBottom","center","Chart","userChartData","width","maxBarSize","layout","strokeDasharray","orientation","dataKey","fill","radius","ChartBox","Map","data-tip","projectionConfig","scale","geography","geographies","geo","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","setTooltipContent","Math","round","onMouseLeave","default","outline","hover","pressed","markers","location","coordinates","markerOffset","r","stroke","strokeWidth","textAnchor","y","fontFamily","memo","WorldMap","state","content","tooltipContent","setState","setContent","autobind","List","ol","ListItem","li","Link","a","RecentRepos","repos","toJS","repo","href","html_url","rel","FilterDrama","slice","Summary","Dashboard","infoBoxes","userInfo","info","AppWrapper","H1","h1","App","UserDataStore","rootStore","Geocode","setApiKey","process","reaction","searchName","searchForUser","user","userLocation","endpoint","url","axios","get","crossDomain","response","username","fromAddress","then","results","geometry","lat","lng","runInAction","console","searchResults","subscriptions","amount","observable","fetchingData","Promise","all","fetchUserFromGithub","searchGithubForUsers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f2a2845.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1187px;\n  max-height: 800px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nconst Row = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`;\n\nexport default Row;\n","import styled from \"styled-components\";\n\nconst Column = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  &:not(:last-of-type) {\n    margin-right: 10px;\n  }\n\n  @media (max-width: 1024px) {\n    flex: 0 1 100%;\n    &:not(:last-of-type) {\n      margin-right: unset;\n      margin-bottom: 10px;\n    }\n  }\n`;\n\nexport default Column;\n","import styled from \"styled-components\";\n\nconst H2 = styled.h2`\n  font-size: ${(props) => (props.large ? \"2em\" : \"1.5em\")};\n  padding: 0 10px;\n  margin: ${(props) => (props.noMargin ? \"unset\" : \"10px 0\")};\n  @media (max-width: 840px) {\n    font-size: ${(props) => (props.large ? \"1.8em\" : \"1.3em\")};\n  }\n`;\n\nexport default H2;\n","import styled from \"styled-components\";\n\nconst H3 = styled.h3`\n  font-size: 1em;\n  padding: 0 10px;\n  margin: 10px 0;\n  @media (max-width: 840px) {\n    font-size: 0.8em;\n  }\n`;\n\nexport default H3;\n","const Colors = {\n  grey_light: \"#f2f2f2\",\n  grey_dark: \"#5d6972\",\n  blue: \"#2abfd8\",\n  green: \"#bdd64b\",\n  orange: \"#ff9933\",\n  red: \"#fc5151\",\n};\n\nexport default Colors;\n","import styled from \"styled-components\";\nimport Colors from \"../../consts/Colors\";\n\nconst { grey_light } = Colors;\n\nconst Select = styled.select`\n  width: 50%;\n  height: 35px;\n  background: ${grey_light};\n  color: gray;\n  padding-left: 5px;\n  font-size: 14px;\n  border: none;\n  outline: none;\n`;\n\nexport default Select;\n","import styled from \"styled-components\";\n\nconst OptionItem = styled.option`\n  color: black;\n  background: white;\n  display: flex;\n  white-space: pre;\n  min-height: 20px;\n  padding: 0px 2px 1px;\n\n  background-color: ${(props) =>\n    props.active ? \"#ddd\" : props.selected ? \"#eee\" : \"#fff\"};\n  &:hover {\n    background-color: ${(props) => (props.active ? \"#ddd\" : \"#eee\")};\n  }\n\n  &:hover {\n    background-color: ${(props) => (props.active ? \"#ddd\" : \"#eee\")};\n  }\n`;\n\nexport default OptionItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport OptionItem from \"./OptionItem\";\n\nconst SelectOption = ({ items }) => {\n  if (!items) return [];\n\n  return items.map((option, idx) => (\n    <OptionItem key={idx} data-role=\"option\">\n      {option.login}\n    </OptionItem>\n  ));\n};\n\nSelectOption.propTypes = {\n  option: PropTypes.object,\n};\n\nexport default SelectOption;\n","import styled from \"styled-components\";\n\nconst Form = styled.form`\n  min-height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default Form;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  width: 70%;\n  max-width: 250px;\n  height: 25px;\n  outline: none;\n  color: #3b3c3d;\n  padding: 0 5px;\n  background-color: white !important;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-bottom: ${(props) =>\n    props.error ? \"1px solid #fb5050\" : \"1px solid #bcc2c5\"};\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-transition: \"color 9999s ease-out, background-color 9999s ease-out\";\n    -webkit-transition-delay: 9999s;\n  }\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst ButtonSubmit = styled.button`\n  width: 37px;\n  height: 37px;\n  margin-left: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: inherit;\n  border: none;\n  cursor: pointer;\n`;\n\nexport default ButtonSubmit;\n","import React, { Component } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Form from \"../../common-components/Form\";\nimport Input from \"../../common-components/Input\";\nimport ButtonSubmit from \"../../common-components/ButtonSubmit\";\n\nimport { Search } from \"@material-ui/icons\";\n\n@inject(\"userDataStore\")\nclass SearchInput extends Component {\n  render() {\n    return (\n      <Formik\n        initialValues={{ name: \"\" }}\n        onSubmit={(values, { setSubmitting }) => {\n          this.props.userDataStore.changeUserToSearchFor(values.name);\n          setSubmitting(false);\n        }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string().required(\"Required\"),\n        })}\n      >\n        {(props) => {\n          const {\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n          } = props;\n          return (\n            <Form onSubmit={handleSubmit}>\n              <Input\n                id=\"name\"\n                placeholder=\"Enter username\"\n                type=\"text\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.name && touched.name ? 1 : 0}\n              />\n              <ButtonSubmit type=\"submit\" disabled={isSubmitting}>\n                <Search />\n              </ButtonSubmit>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport SearchInput from \"./SearchInput\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  font-size: 4.5em;\n  padding: 10px;\n  @media (max-width: 840px) {\n    font-size: 3.5em;\n  }\n`;\n\nconst Header = ({ type, result }) => {\n  const header = (val) => {\n    switch (val) {\n      case \"repos\":\n        return result.public_repos || 0;\n      case \"followers\":\n        return result.followers || 0;\n      case \"subscriptions\":\n        return result.length;\n      default:\n        return null;\n    }\n  };\n\n  return type === \"search\" ? (\n    <SearchInput />\n  ) : (\n    <Wrapper>{header(type)}</Wrapper>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nconst InnerWrapper = styled.div`\n  flex: 4;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default InnerWrapper;\n","import styled from \"styled-components\";\nimport Colors from \"../../consts/Colors\";\n\nconst { grey_light } = Colors;\n\nconst GreyBar = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  background-color: ${grey_light};\n`;\n\nexport default GreyBar;\n","import styled from \"styled-components\";\nimport InnerWrapper from \"./InnerWrapper\";\nimport GreyBar from \"./GreyBar\";\n\nconst InfoBoxContainer = styled.div`\n  min-height: 200px;\n  max-height: 200px;\n  flex: 0 1 calc(25% - 10px);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  box-shadow: 7px 6px 3px -2px rgba(233, 233, 233, 1);\n  background-color: white;\n  border: solid 1px #e3e4e3;\n  &:first-of-type {\n    & ${InnerWrapper} {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    }\n    & ${GreyBar} {\n      justify-content: space-between;\n    }\n  }\n\n  @media (max-width: 1024px) {\n    flex: 0 1 calc(50% - 5px);\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 840px) {\n    flex: 0 1 100%;\n  }\n`;\n\nexport default InfoBoxContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { DynamicFeed, Person, BarChart, MoreHoriz } from \"@material-ui/icons\";\nimport Colors from \"../../consts/Colors\";\n\nconst { blue, green, orange, red } = Colors;\n\nconst IconWrap = styled.div`\n  width: 50px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BlueIconWrap = styled(IconWrap)`\n  background-color: ${blue};\n`;\n\nconst GreenIconWrap = styled(IconWrap)`\n  background-color: ${green};\n`;\n\nconst OrangeIconWrap = styled(IconWrap)`\n  background-color: ${orange};\n`;\n\nconst RedIconWrap = styled(IconWrap)`\n  background-color: ${red};\n`;\n\nconst Icon = ({ name }) => {\n  const renderIcon = (name) => {\n    switch (name) {\n      case \"search\":\n        return (\n          <BlueIconWrap>\n            <Person style={{ color: \"#fff\" }} />\n          </BlueIconWrap>\n        );\n      case \"repos\":\n        return (\n          <GreenIconWrap>\n            <DynamicFeed style={{ color: \"#fff\" }} />\n          </GreenIconWrap>\n        );\n      case \"followers\":\n        return (\n          <OrangeIconWrap>\n            <BarChart style={{ color: \"#fff\" }} />\n          </OrangeIconWrap>\n        );\n      case \"subscriptions\":\n        return (\n          <RedIconWrap>\n            <MoreHoriz style={{ color: \"#fff\" }} />\n          </RedIconWrap>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return renderIcon(name);\n};\n\nexport default Icon;\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { computed, action } from \"mobx\";\nimport PropTypes from \"prop-types\";\n\nimport H2 from \"../../common-components/H2\";\nimport H3 from \"../../common-components/H3\";\nimport Select from \"../../common-components/Select\";\nimport SelectOption from \"../../common-components/SelectOption\";\nimport Header from \"./Header\";\nimport InnerWrapper from \"./InnerWrapper\";\nimport InfoBoxContainer from \"./InfoBoxContainer\";\nimport GreyBar from \"./GreyBar\";\nimport Icon from \"./Icon\";\n\n@inject(\"userDataStore\")\n@observer\nclass InfoBox extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    changeUser: PropTypes.func,\n    userDataStore: PropTypes.object,\n  };\n\n  @action.bound\n  handleOnSelectChange(e) {\n    this.props.userDataStore.changeUserToSearchFor(e.target.value);\n  }\n\n  @computed\n  get selectUser() {\n    const { data } = this.props;\n    if (data.type !== \"search\") return null;\n\n    return (\n      <Fragment>\n        <label\n          htmlFor=\"user-select\"\n          style={{ fontSize: \"10px\", marginLeft: \"10px\" }}\n        >\n          Similar users:\n        </label>\n        <Select id=\"user-select\" onChange={this.handleOnSelectChange}>\n          <SelectOption {...data.result} />\n        </Select>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { data } = this.props;\n    const name = data.name ? (\n      <H2 large noMargin>\n        {data.name.login}\n      </H2>\n    ) : null;\n\n    return (\n      <InfoBoxContainer className>\n        <InnerWrapper>\n          <H3>{data.title}</H3>\n          {name}\n          <Header {...data} />\n        </InnerWrapper>\n        <GreyBar>\n          {this.selectUser}\n          <Icon name={data.type} />\n        </GreyBar>\n      </InfoBoxContainer>\n    );\n  }\n}\n\nexport default InfoBox;\n","import styled from \"styled-components\";\n\nconst ComponentWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  background-color: white;\n  min-height: ${(props) => props.height};\n  box-shadow: 7px 6px 3px -2px rgba(233, 233, 233, 1);\n  margin-top: 10px;\n  border: solid 1px #e3e4e3;\n\n  @media (max-width: 1024px) {\n    margin-top: unset;\n    margin-bottom: ${(props) => props.marginBottom || \"unset\"};\n    min-height: 176px;\n    height: auto;\n  }\n`;\n\nexport default ComponentWrapper;\n","import styled from \"styled-components\";\n\nconst Row = styled.div`\n  width: 100%;\n  min-height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.center ? \"center\" : \"space-between\")};\n`;\n\nexport default Row;\n","import React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport {\n  BarChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Bar,\n  ResponsiveContainer,\n} from \"recharts\";\n\n@inject(\"userDataStore\")\n@observer\nclass Chart extends Component {\n  render() {\n    const { userChartData } = this.props.userDataStore;\n\n    return (\n      <ResponsiveContainer width=\"90%\" height={330}>\n        <BarChart data={userChartData} maxBarSize={20} layout=\"vertical\">\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis type=\"number\" orientation=\"top\" />\n          <YAxis type=\"category\" orientation=\"left\" dataKey=\"name\" />\n          <Tooltip></Tooltip>\n          <Bar dataKey=\"amount\" fill=\"#8884d8\" radius={4} />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default Chart;\n","import React from \"react\";\n\nimport H2 from \"../../common-components/H2\";\nimport ComponentWrapper from \"../../containers/ComponentWrapper\";\nimport Row from \"./Row\";\n\nimport Chart from \"./Chart\";\n\nconst ChartBox = () => {\n  return (\n    <ComponentWrapper height=\"420px\" marginBottom=\"10px\">\n      <Row>\n        <H2>Chart</H2>\n      </Row>\n      <Row center>\n        <Chart />\n      </Row>\n    </ComponentWrapper>\n  );\n};\n\nexport default ChartBox;\n","import React, { memo, Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { computed } from \"mobx\";\nimport PropTypes from \"prop-types\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = (num) => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\n@inject(\"userDataStore\")\n@observer\nclass Map extends Component {\n  static propTypes = {\n    userDataStore: PropTypes.object,\n  };\n\n  @computed\n  get markers() {\n    if (!this.props.userDataStore.location) return [];\n\n    return this.props.userDataStore.location.map(\n      ({ name, coordinates, markerOffset }) => (\n        <Marker key={name} coordinates={coordinates}>\n          <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2} />\n          <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {name}\n          </text>\n        </Marker>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\n          <ZoomableGroup>\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map((geo) => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const { NAME, POP_EST } = geo.properties;\n                      this.props.setTooltipContent(\n                        `${NAME} — ${rounded(POP_EST)}`\n                      );\n                    }}\n                    onMouseLeave={() => {\n                      this.props.setTooltipContent(\"\");\n                    }}\n                    style={{\n                      default: {\n                        fill: \"#D6D6DA\",\n                        outline: \"none\",\n                      },\n                      hover: {\n                        fill: \"#F53\",\n                        outline: \"none\",\n                      },\n                      pressed: {\n                        fill: \"#E42\",\n                        outline: \"none\",\n                      },\n                    }}\n                  />\n                ))\n              }\n            </Geographies>\n            {this.markers}\n          </ZoomableGroup>\n        </ComposableMap>\n      </>\n    );\n  }\n}\n\nexport default memo(Map);\n","import React, { Component } from \"react\";\nimport autobind from \"autobind-decorator\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport ComponentWrapper from \"../../containers/ComponentWrapper\";\nimport H2 from \"../../common-components/H2\";\nimport Map from \"./Map.js\";\n\nclass WorldMap extends Component {\n  state = {\n    content: \"\",\n  };\n\n  @autobind\n  setContent(tooltipContent) {\n    this.setState({ content: tooltipContent });\n  }\n\n  render() {\n    return (\n      <ComponentWrapper height=\"612px\">\n        <H2>User's location</H2>\n        <Map setTooltipContent={this.setContent} />\n        <ReactTooltip>{this.state.content}</ReactTooltip>\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default WorldMap;\n","import styled from \"styled-components\";\n\nconst List = styled.ol`\n  margin: 0;\n  padding-left: 15px;\n`;\n\nexport default List;\n","import styled from \"styled-components\";\nimport Colors from \"../../consts/Colors\";\n\nconst { blue } = Colors;\nconst ListItem = styled.li`\n  position: relative;\n  list-style-type: none;\n  padding-left: 22px;\n  :before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 7px;\n    width: 5px;\n    height: 11px;\n    border-width: 0 2px 2px 0;\n    border-style: solid;\n    border-color: ${blue};\n    transform-origin: bottom left;\n    transform: rotate(45deg);\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport Colors from \"../../consts/Colors\";\n\nconst { blue } = Colors;\nconst Link = styled.a`\n  position: relative;\n  top: 6px;\n  left: 7px;\n  color: ${blue};\n  transition: opacity 0.2s linear;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport default Link;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { computed, toJS } from \"mobx\";\nimport PropTypes from \"prop-types\";\n\nimport List from \"./List\";\nimport ListItem from \"./ListItem\";\nimport Link from \"./Link\";\nimport { FilterDrama } from \"@material-ui/icons\";\n\n@inject(\"userDataStore\")\n@observer\nclass RecentRepos extends Component {\n  static propTypes = {\n    userDataStore: PropTypes.object,\n  };\n\n  @computed\n  get repos() {\n    const repos = this.props.userDataStore.repos;\n\n    return toJS(repos)\n      .map((repo, idx) => (\n        <ListItem key={`repo-${idx}`}>\n          {repo.name}\n          <Link href={repo.html_url} target=\"_blank\" rel=\"noopener norefferer\">\n            <FilterDrama />\n          </Link>\n        </ListItem>\n      ))\n      .slice(0, 4);\n  }\n\n  render() {\n    return <List>{this.repos}</List>;\n  }\n}\n\nexport default RecentRepos;\n","import React, { Component } from \"react\";\n\nimport H2 from \"../../common-components/H2\";\nimport ComponentWrapper from \"../../containers/ComponentWrapper\";\nimport RecentRepos from \"./RecentRepos\";\n\nclass Summary extends Component {\n  render() {\n    return (\n      <ComponentWrapper height=\"180px\">\n        <H2>Recent repos:</H2>\n        <RecentRepos />\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default Summary;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { computed } from \"mobx\";\nimport PropTypes from \"prop-types\";\n\nimport Wrapper from \"./Wrapper\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport InfoBox from \"../../components/InfoBox\";\nimport ChartBox from \"../../components/ChartBox\";\nimport WorldMap from \"../../components/WorldMap\";\nimport Summary from \"../../components/Summary\";\n\n@inject(\"userDataStore\")\n@observer\nclass Dashboard extends Component {\n  static propTypes = {\n    userDataStore: PropTypes.object,\n  };\n\n  @computed\n  get infoBoxes() {\n    const { userInfo } = this.props.userDataStore;\n    return userInfo.map((info, idx) => (\n      <InfoBox key={`info-box-${idx}`} data={info} />\n    ));\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Row>{this.infoBoxes}</Row>\n        <Row>\n          <Column>\n            <ChartBox />\n            <Summary />\n          </Column>\n          <Column>\n            <WorldMap />\n          </Column>\n        </Row>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Dashboard;\n","import styled from \"styled-components\";\nimport Colors from \"../../consts/Colors\";\n\nconst { grey_dark } = Colors;\nconst AppWrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px;\n  background-color: #f8f8f8;\n  color: ${grey_dark};\n`;\n\nexport default AppWrapper;\n","import styled from \"styled-components\";\n\nconst H1 = styled.h1`\n  font-size: 2em;\n  @media (max-width: 840px) {\n    font-size: 1.8em;\n  }\n`;\n\nexport default H1;\n","import React from \"react\";\n\nimport Dashboard from \"./containers/Dashboard\";\nimport AppWrapper from \"./containers/AppWrapper\";\n\nimport H1 from \"./common-components/H1\";\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <H1>Enterprise User Dashboard</H1>\n      <Dashboard />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","import { observable, action, runInAction, reaction, computed } from \"mobx\";\nimport axios from \"axios\";\nimport Geocode from \"react-geocode\";\n\nconst API_KEY = process.env.REACT_APP_GEOLOCATION_KEY;\nclass UserDataStore {\n  @observable searchName;\n  @observable searchResults = [];\n  @observable user = [];\n  @observable repos = [];\n  @observable subscriptions = [];\n  @observable fetchingData;\n  @observable location;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    Geocode.setApiKey(API_KEY);\n\n    reaction(\n      () => this.searchName,\n      () => this.searchForUser()\n    );\n\n    reaction(\n      () => this.user,\n      () => this.userLocation()\n    );\n  }\n\n  async fetchUserFromGithub(endpoint) {\n    const url = `https://api.github.com${endpoint}`;\n    const response = await axios.get(url, { crossDomain: true });\n    return await response.data;\n  }\n\n  async searchGithubForUsers(endpoint) {\n    const url = `https://api.github.com${endpoint}`;\n    const response = await axios.get(url, { crossDomain: true });\n    return await response.data;\n  }\n\n  @action(\"Change User to search for\")\n  changeUserToSearchFor(username) {\n    this.searchName = username;\n  }\n\n  @action(\"Search for user on Github\")\n  searchForUser = async () => {\n    if (!this.searchName) return;\n    this.fetchingData = true;\n\n    const [user, repos, subscriptions, searchResults] = await Promise.all([\n      this.fetchUserFromGithub(`/users/${this.searchName}`),\n      this.fetchUserFromGithub(`/users/${this.searchName}/repos`),\n      this.fetchUserFromGithub(`/users/${this.searchName}/subscriptions`),\n      this.searchGithubForUsers(`/search/users?q=${this.searchName}`),\n      this.userLocation(),\n    ]);\n\n    runInAction(\"Update State after fetching Github's Data\", () => {\n      this.user = user;\n      this.repos = repos;\n      this.subscriptions = subscriptions;\n      this.searchResults = searchResults;\n      this.fetchingData = false;\n    });\n  };\n\n  @action(\"Search for user location\")\n  userLocation() {\n    if (!this.user.location) return [];\n\n    return Geocode.fromAddress(this.user.location).then(\n      (response) => {\n        const { lat, lng } = response.results[0].geometry.location;\n        runInAction(\n          \"Update State after getting user's location coordinates\",\n          () => {\n            this.location = [\n              {\n                name: this.user.location,\n                coordinates: [lng, lat],\n                markerOffset: -15,\n              },\n            ];\n          }\n        );\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  @computed\n  get userInfo() {\n    return [\n      {\n        title: \"User's name\",\n        name: this.user,\n        result: this.searchResults,\n        type: \"search\",\n      },\n      {\n        title: \"User's repositories\",\n        result: this.user,\n        type: \"repos\",\n      },\n      {\n        title: \"User's followers\",\n        result: this.user,\n        type: \"followers\",\n      },\n      {\n        title: \"User's subscriptions\",\n        result: this.subscriptions,\n        type: \"subscriptions\",\n      },\n    ];\n  }\n\n  @computed\n  get userChartData() {\n    return [\n      { name: \"Rep.\", amount: this.user.public_repos || 0 },\n      { name: \"Fol.\", amount: this.user.followers || 0 },\n      { name: \"Sub.\", amount: this.subscriptions.length },\n    ];\n  }\n}\n\nexport default UserDataStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport App from \"./App\";\nimport RootStore from \"./stores/rootStore\";\n\nimport \"normalize.css\";\nimport \"./index.css\";\n\nconst rootStore = new RootStore();\n\nReactDOM.render(\n  <Provider rootStore={rootStore} userDataStore={rootStore.userDataStore}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import UserDataStore from \"./userDataStore\";\n\nexport default class RootStore {\n  constructor() {\n    this.userDataStore = new UserDataStore(this);\n  }\n}\n"],"sourceRoot":""}